#include "display.h"
#include <Wire.h>
#include <SPI.h>
#include <ArduinoLog.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
#define SCREEN_ADDRESS 0x3C

Display &Display::Instance = *new Display();

Display::Display() : display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1) {
}

void Display::setup() {
    if(!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
        Log.errorln("SSD1306 allocation failed");
        return;
    }
    static const uint8_t logo[] = {0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x03, 0xff, 0xc0, 0x07, 0xe7, 0xe0, 0x0f, 0x00, 0xf0, 0x1c, 0x7e, 0x38, 0x39, 0xff, 0x9c, 0x3b, 0xc3, 0xdc, 0x73, 0x81, 0xce, 0x77, 0x3c, 0xee, 0x67, 0x7e, 0xe6, 0x66, 0x66, 0x66, 0x66, 0x6e, 0x66, 0x77, 0x7e, 0xee, 0x77, 0x3c, 0xee, 0x73, 0x81, 0xce, 0x3b, 0xe7, 0xdc, 0x39, 0xff, 0x9c, 0x1c, 0x7e, 0x38, 0x0f, 0x00, 0xf0, 0x07, 0xe7, 0xe0, 0x03, 0xff, 0xc0, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00};

    display.clearDisplay();
    display.setTextColor(WHITE);
    display.setTextSize(2);
    display.setFont(NULL);
    display.setCursor(30, 5);
    display.println("Remote");
    display.setCursor(30, 25);
    display.println("Focuser");
    display.drawBitmap(1, 1, logo, 24, 24, 1);
    display.display();
}

void Display::sleep() {
    display.ssd1306_command(SSD1306_DISPLAYOFF);
}
